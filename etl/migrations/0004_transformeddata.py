# Generated by Django 5.1.5 on 2025-08-11 12:46

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('etl', '0003_remove_metadataraw_raw_xml'),
    ]

    operations = [
        migrations.CreateModel(
            name='TransformedData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_number', models.CharField(max_length=100)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('work_types', models.JSONField(default=list)),
                ('searchable_work_types', models.JSONField(default=list)),
                ('artist', models.JSONField(default=list)),
                ('production_date_start', models.IntegerField(blank=True, null=True)),
                ('production_date_end', models.IntegerField(blank=True, null=True)),
                ('thumbnail_url', models.URLField(max_length=500)),
                ('museum_slug', models.CharField(max_length=10)),
                ('museum_db_id', models.CharField(blank=True, max_length=100, null=True)),
                ('image_url', models.URLField(blank=True, max_length=500, null=True)),
                ('object_url', models.URLField(blank=True, max_length=500, null=True)),
                ('image_loaded', models.BooleanField(default=False)),
                ('text_vector_clip', models.BooleanField(default=False)),
                ('image_vector_clip', models.BooleanField(default=False)),
                ('text_vector_jina', models.BooleanField(default=False)),
                ('image_vector_jina', models.BooleanField(default=False)),
                ('transformed_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('raw_data', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='etl.metadataraw')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('museum_slug', 'object_number'), name='unique_museum_object')],
            },
        ),
    ]
