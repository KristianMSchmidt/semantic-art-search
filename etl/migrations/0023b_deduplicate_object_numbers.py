# Generated by Django 5.1.5 on 2025-09-19 05:30

from django.db import migrations
from django.db.models import Count


def deduplicate_object_numbers(apps, schema_editor):  # noqa: ARG001
    """
    Remove duplicate (museum_slug, object_number) records.
    Keep the most recently updated record, delete older duplicates.
    """
    MetaDataRaw = apps.get_model('etl', 'MetaDataRaw')

    # Find all duplicate (museum_slug, object_number) pairs
    duplicates = (
        MetaDataRaw.objects
        .values('museum_slug', 'object_number')
        .annotate(count=Count('id'))
        .filter(count__gt=1)
    )

    total_duplicates = len(duplicates)
    if total_duplicates == 0:
        print("No duplicates found - migration complete")
        return

    print(f"Found {total_duplicates} duplicate (museum_slug, object_number) pairs")

    deleted_count = 0
    for dup in duplicates:
        museum_slug = dup['museum_slug']
        object_number = dup['object_number']

        # Get all records for this duplicate pair, ordered by last_updated (most recent first)
        records = (
            MetaDataRaw.objects
            .filter(museum_slug=museum_slug, object_number=object_number)
            .order_by('-last_updated', '-created_at', '-id')
        )

        # Keep the first (most recent), delete the rest
        records_to_delete = records[1:]
        count = len(records_to_delete)

        if count > 0:
            print(f"  Deleting {count} duplicate(s) for {museum_slug}:{object_number}")
            for record in records_to_delete:
                record.delete()
                deleted_count += 1

    print(f"Migration complete: deleted {deleted_count} duplicate records")


def reverse_deduplicate(apps, schema_editor):  # noqa: ARG001
    """
    Cannot reverse this migration - duplicates were removed.
    """
    print("Cannot reverse deduplication - duplicate records were permanently deleted")


class Migration(migrations.Migration):

    dependencies = [
        ('etl', '0023_populate_object_number'),
    ]

    operations = [
        migrations.RunPython(
            deduplicate_object_numbers,
            reverse_deduplicate,
        ),
    ]
